/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            flavor = "balanced";
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3 15 2 14 4 39 40 41>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 18 19 20 30 31 32 39 40 41 8 9 10 11 20 21 22 23 32 33 34 35 38 37 36>;
            hold-trigger-on-release;
        };

        osh: osh {
            compatible = "zmk,behavior-sticky-key";
            label = "OSH";
            bindings = <&lt>;
            #binding-cells = <1>;
            ignore-modifiers;
            release-after-ms = <100000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q              &kp W         &kp E            &kp R             &kp T        &kp Y    &kp U              &kp I             &kp O                 &kp P                       &kp BSPC
&kp SQT     &hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &hml LEFT_META F  &kp G        &kp H    &hmr RIGHT_META J  &hmr RIGHT_ALT K  &hmr RIGHT_CONTROL L  &hmr RIGHT_SHIFT SEMICOLON  &kp SQT
&osh 5      &kp Z              &kp X         &kp C            &kp V             &kp B        &kp N    &kp M              &kp COMMA         &kp PERIOD            &kp SLASH                   &osh 4
                                             &mo 3            &kp TAB           &kp SPACE    &kp RET  &mo 1              &mo 2
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &none       &none         &none         &none         &none         &kp BACKSPACE
&bootloader  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &bt BT_SEL 4  &bootloader
&none        &none   &none   &none   &none   &none     &none       &none         &none         &none         &none         &none
                             &none   &none   &none     &none       &none         &none
            >;
        };

        symbols_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL              &kp AT                 &kp HASH          &kp DLLR           &kp PIPE         &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp PERCENT  &kp PLUS  &kp BSPC
&kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL         &kp LESS_THAN      &kp GT           &kp TILDE  &none     &none            &none        &kp SEMI  &none
&kp UNDER  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH    &none      &none     &none            &none        &none     &none
                                                        &none             &none              &none            &none      &none     &none
            >;
        };

        navigation_layer {
            bindings = <
&none  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &none           &none           &none         &none            &none  &kp END
&none  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &kp PAGE_UP
&none  &kp F11  &kp F12  &none   &none   &none      &none           &none           &none         &none            &none  &kp PAGE_DOWN
                         &none   &none   &none      &none           &none           &none
            >;
        };

        left_home_row {
            bindings = <
&trans  &trans          &trans     &trans        &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_META  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans     &trans        &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans        &trans         &trans    &trans  &trans  &trans
            >;
        };

        right_home_row {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans         &trans     &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp RIGHT_META  &kp RIGHT_ALT  &kp RCTRL  &kp LEFT_SHIFT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans         &trans     &trans          &trans
                        &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };
};
